name: CI

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      code-version: ${{ steps.extract.outputs.CODE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          architecture: x64
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        env:
          CI: true
        run: ./gradlew clean build test
      - name: Extract code version from gradle.properties
        run: echo "CODE_VERSION=$(awk -F= '$1~/version/{print $2}' gradle.properties)" >> $GITHUB_OUTPUT

  publish-snapshot:
    name: Publish to sonatype.org (SNAPSHOT)
    needs: [ build ]
    if: github.event_name != 'pull_request' && endsWith(needs.build.outputs.code-version, '-SNAPSHOT') && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release')) && github.repository_owner == 'eu-digital-identity-wallet'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          architecture: x64
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Publish with Gradle
        env:
          CI: true
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.OSSRH_GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
        run: ./gradlew publishAllPublicationsToMavenCentral --full-stacktrace --no-configuration-cache
